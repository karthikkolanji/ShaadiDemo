on:
  push:
    branch:
      - 'release/*'

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest


    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract branch name
        id: branch_name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"

      #- name: Extract tag name
       # id: tag_name
       # run: echo ::set-output name=tag::${GITHUB_REF:10}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/workflows/requirements.txt

      - name: Generate Change logs
        id: changelogs
        working-directory: .github/workflows/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: python release_mail_generator.py ${{ secrets.GITHUB_TOKEN }}  v2.21


      - name: Echo
        run: |
          echo ${{ steps.branch_name.outputs.branch }}


      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
            zip --junk-paths my-artifact README.md

      - name: Setup JDK 1.8
        uses: actions/setup-java@master
        with:
          java-version: 1.8

      - name: Make Gradle executable
        run: chmod +x ./gradlew

     # - name: Build with Gradle
     #   run: ./gradlew build

      - name: Build Debug APK
        run: bash ./gradlew assembleProdFlavourDebug

      - name: Save generated .apk file
        uses: actions/upload-artifact@v2
        with:
          name: uploaded
          path: app/build/outputs/apk/prodFlavour/debug/app-prodFlavour-debug.apk

      - name: Download generated mapping file
        uses: actions/download-artifact@v2
        with:
          name: uploaded
          path: app/build/outputs/apk/prodFlavour/debug/app-prodFlavour-debug.apk

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{steps.branch_name.outputs.branch}}
          release_name: Release ${{ steps.branch_name.outputs.branch }}
          body: |
            Change Logs
            - First Change
            - Second Change
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./my-artifact.zip
          asset_name: my-artifact.zip
          asset_content_type: application/zip